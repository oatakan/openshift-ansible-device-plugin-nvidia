---

- name: create namespace file
  template:
    src: namespace.yml.j2
    dest: /root/{{ cluster_id }}/gpu-operator-namespace.yml

- name: ensure namespace exists
  shell: oc --kubeconfig auth/kubeconfig apply -f gpu-operator-namespace.yml --wait
  args:
    chdir: /root/{{ cluster_id }}/
  register: ocp_gpu_namespace_create
  until: ocp_gpu_namespace_create is success
  retries: 30
  delay: 5

- include_tasks: okd.yml
  when: ocp_type == 'okd'

- name: Add repo
  kubernetes.core.helm_repository:
    name: nvidia
    repo_url: '{{ nvidia_gpu_operator_git_url }}'

- name: deploy nvidia-gpu-operator
  kubernetes.core.helm:
    name: gpu-operator
    chart_ref: nvidia/gpu-operator
    chart_version: "{{ nvidia_gpu_operator_version }}"
    release_namespace: "{{ gpu_operator_namespace }}"
    values: "{{ lookup('template', 'input_vars.yml.j2') | from_yaml }}"
    update_repo_cache: yes
    kubeconfig: /root/{{ cluster_id }}/auth/kubeconfig
  ignore_errors: yes

- name: wait for nvidia-driver-validator pod to be created
  shell: oc --kubeconfig auth/kubeconfig get pods -o custom-columns=POD:.metadata.name --no-headers -n {{ gpu_operator_namespace }} | grep nvidia-device-plugin-valid* | head -1
  args:
    chdir: /root/{{ cluster_id }}/
  register: oc_get_driver_validator_pod_name
  until:
    - oc_get_driver_validator_pod_name is success
    - oc_get_driver_validator_pod_name.stdout != ''
  retries: 50
  delay: 30

- name: wait for nvidia-driver-validator pod to finish
  shell: oc --kubeconfig auth/kubeconfig get pod/{{ oc_get_driver_validator_pod_name.stdout }} -n {{ gpu_operator_namespace }} -o jsonpath='{.status.phase}'
  args:
    chdir: /root/{{ cluster_id }}/
  register: oc_get_driver_validator_pod
  until:
    - oc_get_driver_validator_pod is success
    - oc_get_driver_validator_pod.stdout == 'Succeeded' or oc_get_driver_validator_pod.stdout == 'Failed'
  retries: 50
  delay: 30

- name: drive validator status
  debug:
    msg: "Driver validator status: {{ oc_get_driver_validator_pod.stdout }}"