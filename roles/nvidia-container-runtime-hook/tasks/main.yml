---
- name: install nvidia-container-runtime repo
  get_url:
    url: "{{ nvidia_container_runtime_repo_url }}"
    dest: /etc/yum.repos.d/nvidia-container-runtime.repo

# this doesn't seem to work
- name: import nvidia repo key
  rpm_key:
    state: present
    key: "{{ item }}"
  with_items: "{{ nvidia_container_runtime_repo_keys }}"

- name: disable gpg key check on the nvidia repo
  replace:
    path: /etc/yum.repos.d/nvidia-container-runtime.repo
    regexp: repo_gpgcheck=1
    replace: repo_gpgcheck=0

- name: install nvidia-container-runtime-hook
  yum:
    name: nvidia-container-runtime-hook
    state: present

- name: copy oci-nvidia-hook
  copy:
    src: oci-nvidia-hook
    dest: /usr/libexec/oci/hooks.d/oci-nvidia-hook
    mode: u+rwx

- name: copy oci-nvidia-hook.json
  copy:
    src: oci-nvidia-hook.json
    dest: /usr/share/containers/oci/hooks.d/oci-nvidia-hook.json

#- name: selinux set context for nvidia files
#  sefcontext:
#    target: '/dev/nvidia(.*)?'
#    setype: svirt_sandbox_file_t
#    state: present
#    reload: yes
#  when: ansible_distribution_version is version('7.5', '<')

#- name: selinux set context for nvidia files
#  sefcontext:
#    target: '/dev/nvidia(.*)?'
#    setype: container_file_t
#    state: present
#    reload: yes
#  when: ansible_distribution_version is version('7.5', '>=')

- name: selinux set context for nvidia files
  shell: chcon -t svirt_sandbox_file_t /dev/nvidia*
  when: ansible_distribution_version is version('7.5', '<')

- name: selinux set context for nvidia files
  shell: chcon -t container_file_t /dev/nvidia*
  when: ansible_distribution_version is version('7.5', '>=')

- name: test cuda-vector-add container
  docker_container:
    name: test-cuda-vector-add
    image: docker.io/mirrorgooglecontainers/cuda-vector-add:v0.1
    #auto_remove: yes
    interactive: yes
    detach: no
  register: cuda_vector_add_container

- name: debug cuda_vector_add_container output
  debug:
    var: cuda_vector_add_container.ansible_facts.docker_container.Output

- name: remove test cuda-vector-add container
  docker_container:
    name: "{{ cuda_vector_add_container.ansible_facts.docker_container.Id | default('test-cuda-vector-add') }}"
    state: absent

- name: fail if not the expected output
  fail:
    msg: "nvidia-container-runtime is not installed successfully."
  when: (cuda_vector_add_container.ansible_facts.docker_container.Output is defined) and ("Test PASSED" not in cuda_vector_add_container.ansible_facts.docker_container.Output)